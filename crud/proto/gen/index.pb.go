// Code generated by protoc-gen-go. DO NOT EDIT.
// source: index.proto

package usersApp

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type UserInfo struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Nome                 string   `protobuf:"bytes,2,opt,name=Nome,proto3" json:"Nome,omitempty"`
	Sobrenome            string   `protobuf:"bytes,3,opt,name=Sobrenome,proto3" json:"Sobrenome,omitempty"`
	Age                  int32    `protobuf:"varint,4,opt,name=age,proto3" json:"age,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserInfo) Reset()         { *m = UserInfo{} }
func (m *UserInfo) String() string { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()    {}
func (*UserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{1}
}

func (m *UserInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserInfo.Unmarshal(m, b)
}
func (m *UserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserInfo.Marshal(b, m, deterministic)
}
func (m *UserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfo.Merge(m, src)
}
func (m *UserInfo) XXX_Size() int {
	return xxx_messageInfo_UserInfo.Size(m)
}
func (m *UserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfo proto.InternalMessageInfo

func (m *UserInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UserInfo) GetNome() string {
	if m != nil {
		return m.Nome
	}
	return ""
}

func (m *UserInfo) GetSobrenome() string {
	if m != nil {
		return m.Sobrenome
	}
	return ""
}

func (m *UserInfo) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

type Id struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Id) Reset()         { *m = Id{} }
func (m *Id) String() string { return proto.CompactTextString(m) }
func (*Id) ProtoMessage()    {}
func (*Id) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{2}
}

func (m *Id) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Id.Unmarshal(m, b)
}
func (m *Id) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Id.Marshal(b, m, deterministic)
}
func (m *Id) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Id.Merge(m, src)
}
func (m *Id) XXX_Size() int {
	return xxx_messageInfo_Id.Size(m)
}
func (m *Id) XXX_DiscardUnknown() {
	xxx_messageInfo_Id.DiscardUnknown(m)
}

var xxx_messageInfo_Id proto.InternalMessageInfo

func (m *Id) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type Status struct {
	Value                int32    `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{3}
}

func (m *Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Status.Unmarshal(m, b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Status.Marshal(b, m, deterministic)
}
func (m *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(m, src)
}
func (m *Status) XXX_Size() int {
	return xxx_messageInfo_Status.Size(m)
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

func (m *Status) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func init() {
	proto.RegisterType((*Empty)(nil), "userApp.Empty")
	proto.RegisterType((*UserInfo)(nil), "userApp.UserInfo")
	proto.RegisterType((*Id)(nil), "userApp.Id")
	proto.RegisterType((*Status)(nil), "userApp.Status")
}

func init() { proto.RegisterFile("index.proto", fileDescriptor_f750e0f7889345b5) }

var fileDescriptor_f750e0f7889345b5 = []byte{
	// 266 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x51, 0x4d, 0x4b, 0xc3, 0x40,
	0x10, 0x25, 0x69, 0xd2, 0xa4, 0xb3, 0x50, 0x75, 0xf0, 0x10, 0x82, 0x48, 0xc9, 0xa9, 0x22, 0xc6,
	0xaf, 0x5f, 0x50, 0x3f, 0x90, 0x5c, 0x3c, 0xb4, 0xf4, 0xe2, 0x41, 0x48, 0xd9, 0x51, 0x84, 0x36,
	0xbb, 0xec, 0x6e, 0x44, 0x7f, 0xb6, 0xff, 0x40, 0x76, 0xbb, 0x8d, 0x56, 0xc5, 0xdb, 0x9b, 0xf7,
	0xde, 0x3c, 0xe6, 0x31, 0xc0, 0x5e, 0x1a, 0x4e, 0x6f, 0xa5, 0x54, 0xc2, 0x08, 0x4c, 0x5a, 0x4d,
	0x6a, 0x22, 0x65, 0x91, 0x40, 0x7c, 0xbb, 0x92, 0xe6, 0xbd, 0x78, 0x84, 0x74, 0xae, 0x49, 0x55,
	0xcd, 0x93, 0xc0, 0x21, 0x84, 0x15, 0xcf, 0x82, 0x51, 0x30, 0x1e, 0x4c, 0xc3, 0x8a, 0x23, 0x42,
	0x74, 0x2f, 0x56, 0x94, 0x85, 0x8e, 0x71, 0x18, 0x0f, 0x60, 0x30, 0x13, 0x0b, 0x45, 0x8d, 0x15,
	0x7a, 0x4e, 0xf8, 0x22, 0x70, 0x17, 0x7a, 0xf5, 0x33, 0x65, 0xd1, 0x28, 0x18, 0xc7, 0x53, 0x0b,
	0x8b, 0xdc, 0x66, 0xe2, 0x3e, 0xc4, 0xaf, 0xf5, 0xb2, 0x25, 0x1f, 0xbe, 0x1e, 0x8a, 0x43, 0xe8,
	0xcf, 0x4c, 0x6d, 0x5a, 0xbd, 0xad, 0xc7, 0x5e, 0xbf, 0xf8, 0x08, 0x20, 0xb2, 0xc7, 0xe1, 0x29,
	0xa4, 0x77, 0x64, 0x2c, 0xd4, 0x38, 0x2c, 0x7d, 0x87, 0xd2, 0x15, 0xc8, 0xf7, 0xba, 0x79, 0xd3,
	0xe3, 0x2c, 0xc0, 0x23, 0x48, 0xfc, 0x02, 0xb2, 0x4e, 0xaf, 0xf8, 0x1f, 0x66, 0x3c, 0x01, 0x76,
	0xad, 0xa8, 0x36, 0xb4, 0x8e, 0xff, 0xed, 0xc8, 0xbf, 0x27, 0xe0, 0x39, 0xb0, 0xb9, 0xe4, 0xff,
	0xd9, 0x77, 0x3a, 0xca, 0x97, 0x3b, 0x06, 0x76, 0x43, 0x4b, 0xda, 0xac, 0x6c, 0x1d, 0xf4, 0xd3,
	0x7c, 0x05, 0x0f, 0xa9, 0x65, 0xf4, 0x44, 0xca, 0x45, 0xdf, 0x3d, 0xed, 0xf2, 0x33, 0x00, 0x00,
	0xff, 0xff, 0xa9, 0x8b, 0xc8, 0x76, 0xc3, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserClient is the client API for User service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserClient interface {
	GetUsers(ctx context.Context, in *Empty, opts ...grpc.CallOption) (User_GetUsersClient, error)
	GetUser(ctx context.Context, in *Id, opts ...grpc.CallOption) (*UserInfo, error)
	CreateUsers(ctx context.Context, in *UserInfo, opts ...grpc.CallOption) (*Id, error)
	UpdateUsers(ctx context.Context, in *UserInfo, opts ...grpc.CallOption) (*Status, error)
	DeleteUsers(ctx context.Context, in *Id, opts ...grpc.CallOption) (*Status, error)
}

type userClient struct {
	cc *grpc.ClientConn
}

func NewUserClient(cc *grpc.ClientConn) UserClient {
	return &userClient{cc}
}

func (c *userClient) GetUsers(ctx context.Context, in *Empty, opts ...grpc.CallOption) (User_GetUsersClient, error) {
	stream, err := c.cc.NewStream(ctx, &_User_serviceDesc.Streams[0], "/userApp.User/GetUsers", opts...)
	if err != nil {
		return nil, err
	}
	x := &userGetUsersClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type User_GetUsersClient interface {
	Recv() (*UserInfo, error)
	grpc.ClientStream
}

type userGetUsersClient struct {
	grpc.ClientStream
}

func (x *userGetUsersClient) Recv() (*UserInfo, error) {
	m := new(UserInfo)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *userClient) GetUser(ctx context.Context, in *Id, opts ...grpc.CallOption) (*UserInfo, error) {
	out := new(UserInfo)
	err := c.cc.Invoke(ctx, "/userApp.User/GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) CreateUsers(ctx context.Context, in *UserInfo, opts ...grpc.CallOption) (*Id, error) {
	out := new(Id)
	err := c.cc.Invoke(ctx, "/userApp.User/CreateUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) UpdateUsers(ctx context.Context, in *UserInfo, opts ...grpc.CallOption) (*Status, error) {
	out := new(Status)
	err := c.cc.Invoke(ctx, "/userApp.User/UpdateUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) DeleteUsers(ctx context.Context, in *Id, opts ...grpc.CallOption) (*Status, error) {
	out := new(Status)
	err := c.cc.Invoke(ctx, "/userApp.User/DeleteUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServer is the server API for User service.
type UserServer interface {
	GetUsers(*Empty, User_GetUsersServer) error
	GetUser(context.Context, *Id) (*UserInfo, error)
	CreateUsers(context.Context, *UserInfo) (*Id, error)
	UpdateUsers(context.Context, *UserInfo) (*Status, error)
	DeleteUsers(context.Context, *Id) (*Status, error)
}

// UnimplementedUserServer can be embedded to have forward compatible implementations.
type UnimplementedUserServer struct {
}

func (*UnimplementedUserServer) GetUsers(req *Empty, srv User_GetUsersServer) error {
	return status.Errorf(codes.Unimplemented, "method GetUsers not implemented")
}
func (*UnimplementedUserServer) GetUser(ctx context.Context, req *Id) (*UserInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUser not implemented")
}
func (*UnimplementedUserServer) CreateUsers(ctx context.Context, req *UserInfo) (*Id, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUsers not implemented")
}
func (*UnimplementedUserServer) UpdateUsers(ctx context.Context, req *UserInfo) (*Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUsers not implemented")
}
func (*UnimplementedUserServer) DeleteUsers(ctx context.Context, req *Id) (*Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteUsers not implemented")
}

func RegisterUserServer(s *grpc.Server, srv UserServer) {
	s.RegisterService(&_User_serviceDesc, srv)
}

func _User_GetUsers_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(UserServer).GetUsers(m, &userGetUsersServer{stream})
}

type User_GetUsersServer interface {
	Send(*UserInfo) error
	grpc.ServerStream
}

type userGetUsersServer struct {
	grpc.ServerStream
}

func (x *userGetUsersServer) Send(m *UserInfo) error {
	return x.ServerStream.SendMsg(m)
}

func _User_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userApp.User/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).GetUser(ctx, req.(*Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_CreateUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).CreateUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userApp.User/CreateUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).CreateUsers(ctx, req.(*UserInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_UpdateUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).UpdateUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userApp.User/UpdateUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).UpdateUsers(ctx, req.(*UserInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_DeleteUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).DeleteUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userApp.User/DeleteUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).DeleteUsers(ctx, req.(*Id))
	}
	return interceptor(ctx, in, info, handler)
}

var _User_serviceDesc = grpc.ServiceDesc{
	ServiceName: "userApp.User",
	HandlerType: (*UserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUser",
			Handler:    _User_GetUser_Handler,
		},
		{
			MethodName: "CreateUsers",
			Handler:    _User_CreateUsers_Handler,
		},
		{
			MethodName: "UpdateUsers",
			Handler:    _User_UpdateUsers_Handler,
		},
		{
			MethodName: "DeleteUsers",
			Handler:    _User_DeleteUsers_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetUsers",
			Handler:       _User_GetUsers_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "index.proto",
}
